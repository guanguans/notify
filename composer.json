{
    "name": "guanguans/notify",
    "description": "Push notification SDK(AnPush、Bark、Chanify、DingTalk、Discord、Gitter、GoogleChat、IGot、Lark、Mattermost、MicrosoftTeams、NowPush、Ntfy、Push、Pushback、PushBullet、PushDeer、PushMe、Pushover、PushPlus、QQ、RocketChat、ServerChan、ShowdocPush、SimplePush、Slack、Telegram、WeWork、WPush、XiZhi、YiFengChuanHua、Zulip).",
    "license": "MIT",
    "type": "library",
    "keywords": [
        "bot",
        "notification",
        "notifier",
        "notify",
        "push",
        "sdk",
        "QQ 频道机器人",
        "Server酱",
        "企业微信",
        "企业微信群机器人",
        "微信",
        "息知",
        "钉钉",
        "钉钉群机器人",
        "飞书",
        "飞书群机器人",
        "一封传话",
        "AnPush",
        "Bark",
        "Chanify",
        "DingTalk",
        "Discord",
        "Gitter",
        "GoogleChat",
        "IGot",
        "Lark",
        "Mattermost",
        "MicrosoftTeams",
        "NowPush",
        "Ntfy",
        "Push",
        "Pushback",
        "PushBullet",
        "PushDeer",
        "PushMe",
        "Pushover",
        "PushPlus",
        "QQ",
        "RocketChat",
        "ServerChan",
        "ShowdocPush",
        "SimplePush",
        "Slack",
        "Telegram",
        "WeWork",
        "WPush",
        "XiZhi",
        "YiFengChuanHua",
        "Zulip"
    ],
    "authors": [
        {
            "name": "guanguans",
            "email": "ityaozm@gmail.com",
            "homepage": "https://www.guanguans.cn",
            "role": "developer"
        }
    ],
    "homepage": "https://github.com/guanguans/notify",
    "support": {
        "issues": "https://github.com/guanguans/notify/issues",
        "source": "https://github.com/guanguans/notify"
    },
    "funding": [
        {
            "type": "wechat",
            "url": "https://www.guanguans.cn/images/wechat.jpeg"
        }
    ],
    "require": {
        "php": ">=8.0",
        "ext-json": "*",
        "ext-openssl": "*",
        "ext-simplexml": "*",
        "guzzlehttp/guzzle": "^7.9",
        "guzzlehttp/uri-template": "^1.0",
        "symfony/options-resolver": "^5.4 || ^6.0 || ^7.0"
    },
    "require-dev": {
        "bamarni/composer-bin-plugin": "^1.8",
        "brainmaestro/composer-git-hooks": "^3.0",
        "ergebnis/composer-normalize": "^2.45",
        "ergebnis/license": "^2.6",
        "ergebnis/php-cs-fixer-config": "dev-main",
        "ergebnis/phpunit-slow-test-detector": "^2.18",
        "ergebnis/rector-rules": "^1.3",
        "guanguans/ai-commit": "dev-main",
        "guanguans/monorepo-builder-worker": "^1.4",
        "illuminate/collections": "^9.52 || ^10.0 || ^11.0",
        "illuminate/support": "^9.52 || ^10.0 || ^11.0",
        "infection/extension-installer": "^0.1",
        "kcs/class-finder": "^0.3",
        "maglnet/composer-require-checker": "^3.8 || ^4.0",
        "mockery/mockery": "^1.6",
        "pestphp/pest": "^1.23 || ^2.0 || ^3.0",
        "pestphp/pest-plugin-faker": "^1.0 || ^2.0 || ^3.0",
        "php-mock/php-mock-phpunit": "^2.10",
        "phpbench/phpbench": "^1.2",
        "phpstan/extension-installer": "^1.4",
        "phpstan/phpstan": "^2.1",
        "phpstan/phpstan-deprecation-rules": "^2.0",
        "rector/rector": "^2.0",
        "symfony/var-dumper": "^6.0 || ^7.0",
        "vimeo/psalm": "^5.26 || ^6.0",
        "yoast/phpunit-polyfills": "^4.0"
    },
    "suggest": {
        "illuminate/collections": "Required to use the method [Response::collect()].",
        "illuminate/support": "Required to use the method [Response::fluent()].",
        "symfony/var-dumper": "Required to use the the trait [WithDumpable]."
    },
    "minimum-stability": "stable",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "Guanguans\\Notify\\": "src"
        },
        "files": [
            "src/Foundation/Support/helpers.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Guanguans\\NotifyTests\\": "tests"
        }
    },
    "config": {
        "allow-plugins": {
            "bamarni/composer-bin-plugin": true,
            "ergebnis/composer-normalize": true,
            "infection/extension-installer": true,
            "pestphp/pest-plugin": true,
            "phpstan/extension-installer": true
        },
        "apcu-autoloader": true,
        "classmap-authoritative": false,
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "bamarni-bin": {
            "bin-links": true,
            "forward-command": true,
            "target-directory": "vendor-bin"
        },
        "branch-alias": {
            "dev-main": "2.x-dev"
        },
        "composer-normalize": {
            "indent-size": 4,
            "indent-style": "space"
        },
        "hooks": {
            "post-merge": [
                "composer checks"
            ],
            "pre-commit": [
                "composer checks"
            ]
        }
    },
    "scripts": {
        "post-install-cmd": [
            "@cghooks add --ignore-lock",
            "@cghooks update"
        ],
        "post-update-cmd": [
            "@cghooks update"
        ],
        "ai-commit": "@php ./vendor/bin/ai-commit commit --ansi",
        "ai-commit-bito": "@ai-commit --generator=bito_cli",
        "ai-commit-bito-no-verify": "@ai-commit-bito --no-verify",
        "ai-commit-github-copilot": "@ai-commit --generator=github_copilot_cli",
        "ai-commit-github-copilot-no-verify": "@ai-commit-github-copilot --no-verify",
        "ai-commit-github-models": "@ai-commit --generator=github_models_cli",
        "ai-commit-github-models-no-verify": "@ai-commit-github-models --no-verify",
        "ai-commit-no-verify": "@ai-commit --no-verify",
        "benchmark": "@php ./vendor/bin/phpbench run --report=aggregate --ansi -v",
        "cghooks": "@php ./vendor/bin/cghooks --ansi -v",
        "checks": [
            "@composer-normalize",
            "@composer-validate",
            "@platform-lint",
            "@generate-ide-json",
            "@composer-require-checker",
            "@composer-unused",
            "@md-lint",
            "@zh-lint",
            "@style-lint",
            "@test",
            "@psalm",
            "@phpstan",
            "@rector-dry-run",
            "@rector-php82-dry-run",
            "@infection-dirty"
        ],
        "composer-bin-all-update": "@composer bin all update --ansi -v",
        "composer-check-platform-reqs": "@composer check-platform-reqs --lock --ansi -v",
        "composer-normalize": "@composer normalize --dry-run --diff --ansi -v",
        "composer-require-checker": "@php ./vendor/bin/composer-require-checker check --config-file=composer-require-checker.json composer.json --ansi -v",
        "composer-require-checker-json": "@php ./vendor/bin/composer-require-checker check --config-file=composer-require-checker.json composer.json --ansi -v --output=json | jq",
        "composer-unused": "@php ./vendor/bin/composer-unused --ansi -v",
        "composer-updater": "@php ./composer-updater --highest-php-binary=/opt/homebrew/opt/php@8.4/bin/php --except-packages=pestphp/pest-plugin-laravel --ansi",
        "composer-updater-dry-run": "@composer-updater --dry-run",
        "composer-validate": "@composer validate --check-lock --strict --ansi -v",
        "generate-ide-json": "@php generate-ide-json",
        "infection": "@php ./vendor/bin/infection --configuration=infection.json --show-mutations --threads=8 --git-diff-base=origin/main --ansi -v",
        "infection-dirty": "@infection --git-diff-filter=AM",
        "json-lint": "@php ./vendor/bin/jsonlint *.json .*rc",
        "lint": [
            "for DIR in .; do find $DIR -maxdepth 1 -type f -name '*.php' -type f ! -name 'xxx.php' -exec php -l {} \\; 2>&1 | (! grep -v '^No syntax errors detected'); done",
            "for DIR in ./src ./tests; do find $DIR -type f -name '*.php' -type f ! -name 'xxx.php' -exec php -l {} \\; 2>&1 | (! grep -v '^No syntax errors detected'); done"
        ],
        "mark-finish": "printf '\\n!\\n!\\t\\033[0;32m%s\\033[0m\\n!\\n\\n' \"Finished\"",
        "mark-separate": "printf '\\n!\\n!\\t\\033[0;33m%s\\033[0m\\n!\\n\\n' \"----------------\"",
        "mark-start": "printf '\\n!\\n!\\t\\033[0;36m%s\\033[0m\\n!\\n\\n' \"Started\"",
        "md-fix": "@md-lint --fix",
        "md-lint": "lint-md --config .lintmdrc ./*.md ./.github/ ./docs/ ./src/*/*.md",
        "peck": "/opt/homebrew/opt/php@8.3/bin/php ./vendor/bin/peck check --path=src/ --config=peck.json --ansi -v",
        "peck-init": "@peck --init",
        "pest": "@php ./vendor/bin/pest --coverage",
        "pest-coverage": "@pest --coverage-html=./.build/phpunit/ --coverage-clover=./clover.xml",
        "pest-highest": [
            "@putenvs",
            "$PHP83 ./vendor/bin/pest --coverage"
        ],
        "pest-migrate-configuration": "@pest --migrate-configuration",
        "pest-profile": "@pest --profile",
        "pest-type-coverage": "@pest --type-coverage",
        "pest-update-snapshots": "@pest -d --update-snapshots",
        "phpmnd": "@php ./vendor/bin/phpmnd src --exclude-path=Support/Utils.php --hint --progress --ansi -v",
        "phpstan": "@php ./vendor/bin/phpstan analyse --ansi -v",
        "phpstan-baseline": "@phpstan --generate-baseline --allow-empty-baseline",
        "platform-lint": "@php platform-lint",
        "post-merge": [
            "composer install --ansi -v"
        ],
        "psalm": "@php ./vendor/bin/psalm",
        "psalm-baseline": "@psalm --update-baseline",
        "putenvs": [
            "@putenv PHP73=/opt/homebrew/opt/php@7.3/bin/php",
            "@putenv PHP74=/opt/homebrew/opt/php@7.4/bin/php",
            "@putenv PHP80=/opt/homebrew/opt/php@8.0/bin/php",
            "@putenv PHP81=/opt/homebrew/opt/php@8.1/bin/php",
            "@putenv PHP82=/opt/homebrew/opt/php@8.2/bin/php",
            "@putenv PHP83=/opt/homebrew/opt/php@8.3/bin/php",
            "@putenv PHP84=/opt/homebrew/opt/php@8.4/bin/php"
        ],
        "rector": "@php ./vendor/bin/rector --clear-cache --ansi -v",
        "rector-custom-rule": "@rector custom-rule",
        "rector-detect-node": "@rector detect-node --loop",
        "rector-dry-run": "@rector --dry-run",
        "rector-list-rules": "@rector list-rules",
        "rector-php82": "@rector --config=rector-php82.php",
        "rector-php82-dry-run": "@rector-php82 --dry-run",
        "rector-setup-ci": "@rector setup-ci",
        "release": "@php ./vendor/bin/monorepo-builder release --ansi -v",
        "release-1.0.0-BETA1": "@release 1.0.0-BETA1",
        "release-1.0.0-BETA1-dry-run": "@release-1.0.0-BETA1 --dry-run",
        "release-major": "@release major",
        "release-major-dry-run": "@release-major --dry-run",
        "release-minor": "@release minor",
        "release-minor-dry-run": "@release-minor --dry-run",
        "release-patch": "@release patch",
        "release-patch-dry-run": "@release-patch --dry-run",
        "style-fix": "@php ./vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php --show-progress=dots --diff --ansi -v",
        "style-fix-dist": "@php ./vendor/bin/php-cs-fixer fix --config=.php-cs-fixer-dist.php --show-progress=dots --diff --ansi -v",
        "style-lint": "@style-fix --dry-run",
        "style-lint-dist": "@style-fix-dist --dry-run",
        "test": "@pest",
        "test-coverage": "@pest-coverage",
        "test-highest": "@pest-highest",
        "test-migrate-configuration": "@pest-migrate-configuration",
        "test-phpunit": "@php ./vendor/bin/phpunit --cache-result-file=./.build/phpunit/.phpunit.result.cache --coverage-text --ansi -v",
        "test-phpunit-coverage": "@test --coverage-html=./.build/phpunit/ --coverage-clover=clover.xml",
        "test-type-coverage": "@pest-type-coverage",
        "test-update-snapshots": "@pest-update-snapshots",
        "trufflehog": "trufflehog git https://github.com/guanguans/notify --only-verified",
        "yaml-lint": "@php ./vendor/bin/yaml-lint .github --ansi -v",
        "zh-fix": "@zh-lint --fix",
        "zh-lint": "zhlint {./,docs/,docs/**/}*-zh_CN.md"
    },
    "scripts-aliases": {
        "pest": [
            "test"
        ],
        "pest-coverage": [
            "test-coverage"
        ],
        "pest-migrate-configuration": [
            "test-migrate-configuration"
        ],
        "pest-update-snapshots": [
            "test-update-snapshots"
        ]
    }
}
